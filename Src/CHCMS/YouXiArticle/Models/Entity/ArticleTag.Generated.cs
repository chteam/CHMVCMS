
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;

namespace YouXiArticle.Models
{
    /// <summary>
    /// The class representing the dbo.ArticleTag table.
    /// </summary>
    [Table(Name="dbo.ArticleTag")]
    public partial class ArticleTag
        : YouXiArticleEntity
    {
        
        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="ArticleTag"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute()]
        public ArticleTag()
        {
            OnCreated();
            _tag = default(EntityRef<Tag>);
            _article = default(EntityRef<Article>);
        }
        #endregion
        
        #region Column Mapped Properties
        
        private long _iD;

        /// <summary>
        /// Gets or sets the ID column value.
        /// </summary>
        [Column(Name="ID", Storage="_iD", DbType="bigint NOT NULL", IsPrimaryKey=true, CanBeNull=false)]
        public long ID
        {
            get { return _iD; }
            set
            {
                if (_iD != value)
                {
                    OnIDChanging(value);
                    OnPropertyChanging("ID");
                    _iD = value;
                    OnPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        
        private long _tagID;

        /// <summary>
        /// Gets or sets the TagID column value.
        /// </summary>
        [Column(Name="TagID", Storage="_tagID", DbType="bigint NOT NULL", CanBeNull=false)]
        public long TagID
        {
            get { return _tagID; }
            set
            {
                if (_tagID != value)
                {
                    if (_tag.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    OnTagIDChanging(value);
                    OnPropertyChanging("TagID");
                    _tagID = value;
                    OnPropertyChanged("TagID");
                    OnTagIDChanged();
                }
            }
        }
        
        private long _articleID;

        /// <summary>
        /// Gets or sets the ArticleID column value.
        /// </summary>
        [Column(Name="ArticleID", Storage="_articleID", DbType="bigint NOT NULL", CanBeNull=false)]
        public long ArticleID
        {
            get { return _articleID; }
            set
            {
                if (_articleID != value)
                {
                    if (_article.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    OnArticleIDChanging(value);
                    OnPropertyChanging("ArticleID");
                    _articleID = value;
                    OnPropertyChanged("ArticleID");
                    OnArticleIDChanged();
                }
            }
        }
        #endregion
        
        #region Association Mapped Properties
        
        private EntityRef<Tag> _tag;

        /// <summary>
        /// Gets or sets the Tag association.
        /// </summary>
        [Association(Name="FK_ArticleTag_Tag", Storage="_tag", ThisKey="TagID", OtherKey="ID", IsForeignKey=true)]
        public Tag Tag
        {
            get { return _tag.Entity; }
            set
            {
                Tag previousValue = _tag.Entity;
                if (previousValue != value || _tag.HasLoadedOrAssignedValue == false)
                {
                    OnPropertyChanging("Tag");
                    if (previousValue != null)
                    {
                        _tag.Entity = null;
                        previousValue.ArticleTagList.Remove(this);
                    }
                    _tag.Entity = value;
                    if (value != null)
                    {
                        value.ArticleTagList.Add(this);
                        _tagID = value.ID;
                    }
                    else
                    {
                        _tagID = default(long);
                    }
                    OnPropertyChanged("Tag");
                }
            }
        }
        
        private EntityRef<Article> _article;

        /// <summary>
        /// Gets or sets the Article association.
        /// </summary>
        [Association(Name="FK_ArticleTag_Article", Storage="_article", ThisKey="ArticleID", OtherKey="ID", IsForeignKey=true)]
        public Article Article
        {
            get { return _article.Entity; }
            set
            {
                Article previousValue = _article.Entity;
                if (previousValue != value || _article.HasLoadedOrAssignedValue == false)
                {
                    OnPropertyChanging("Article");
                    if (previousValue != null)
                    {
                        _article.Entity = null;
                        previousValue.ArticleTagList.Remove(this);
                    }
                    _article.Entity = value;
                    if (value != null)
                    {
                        value.ArticleTagList.Add(this);
                        _articleID = value.ID;
                    }
                    else
                    {
                        _articleID = default(long);
                    }
                    OnPropertyChanged("Article");
                }
            }
        }
        #endregion
        
        #region Extensibility Method Definitions
        /// <summary>Called when this instance is loaded.</summary>
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        partial void OnValidate(ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called when ID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIDChanging(long value);
        /// <summary>Called after ID has Changed.</summary>
        partial void OnIDChanged();
        /// <summary>Called when TagID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnTagIDChanging(long value);
        /// <summary>Called after TagID has Changed.</summary>
        partial void OnTagIDChanged();
        /// <summary>Called when ArticleID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnArticleIDChanging(long value);
        /// <summary>Called after ArticleID has Changed.</summary>
        partial void OnArticleIDChanged();
        #endregion
        
    }
}

